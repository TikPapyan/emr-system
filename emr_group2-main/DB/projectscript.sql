-- MySQL Script generated by MySQL Workbench
-- Tue Apr  5 21:50:49 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Patient` (
  `patientID` INT NOT NULL AUTO_INCREMENT,
  `active` TINYINT NOT NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `gender` VARCHAR(10) NULL,
  `birthDate` DATE NULL,
  `deceased` TINYINT NOT NULL,
  `maritalStatus` VARCHAR(45) NULL,
  `multipleBirth` TINYINT NOT NULL,
  `photo` BLOB NULL,
  `communicationLanguage` TINYINT NOT NULL,
  `communicationPreferred` TINYINT NOT NULL,
  PRIMARY KEY (`patientID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Qualifications`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Qualifications` (
  `qualificationID` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NOT NULL,
  `validStartDate` DATETIME NULL,
  `validEndDate` DATETIME NULL,
  `issuer` VARCHAR(45) NULL,
  PRIMARY KEY (`qualificationID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Organization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Organization` (
  `organizationID` INT NOT NULL,
  `active` TINYINT NOT NULL,
  `type` VARCHAR(45) NULL,
  `alias` VARCHAR(45) NULL,
  `telecom` VARCHAR(45) NULL,
  `partOf` VARCHAR(45) NULL,
  `endpointt` VARCHAR(45) NULL,
  PRIMARY KEY (`organizationID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Practitioner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Practitioner` (
  `practitionerID` INT NOT NULL,
  `active` TINYINT NOT NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `contact` VARCHAR(45) NULL,
  `addressCode` INT NULL,
  `gender` VARCHAR(10) NULL,
  `birthDate` DATE NULL,
  `photo` BLOB NULL,
  `Qualifications_qualificationID` INT NOT NULL,
  `Organization_organizationID` INT NOT NULL,
  PRIMARY KEY (`practitionerID`, `Qualifications_qualificationID`),
  INDEX `fk_Practitioner_Qualifications1_idx` (`Qualifications_qualificationID` ASC) VISIBLE,
  INDEX `fk_Practitioner_Organization1_idx` (`Organization_organizationID` ASC) VISIBLE,
  CONSTRAINT `fk_Practitioner_Qualifications1`
    FOREIGN KEY (`Qualifications_qualificationID`)
    REFERENCES `mydb`.`Qualifications` (`qualificationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Practitioner_Organization1`
    FOREIGN KEY (`Organization_organizationID`)
    REFERENCES `mydb`.`Organization` (`organizationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PractitionerRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PractitionerRole` (
  `pracRoleID` INT NOT NULL,
  `active` TINYINT NOT NULL,
  `startDate` DATETIME NULL,
  `endDate` DATETIME NULL,
  `practitioner` VARCHAR(45) NULL,
  `organization` VARCHAR(45) NULL,
  `code` INT NULL,
  `speciality` VARCHAR(45) NULL,
  `location` VARCHAR(45) NULL,
  `healthcareService` VARCHAR(100) NULL,
  `contact` VARCHAR(45) NULL,
  `telecom` VARCHAR(45) NULL,
  `endpoint` VARCHAR(45) NULL,
  PRIMARY KEY (`pracRoleID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Encounter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Encounter` (
  `encounterID` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NULL,
  `serviceType` VARCHAR(45) NULL,
  `priority` VARCHAR(45) NULL,
  `subject` VARCHAR(45) NULL,
  `subjectStatus` VARCHAR(45) NULL,
  `episodeOfCare` VARCHAR(45) NULL,
  `basedOn` VARCHAR(45) NULL,
  `appointment` VARCHAR(45) NULL,
  `startDate` DATETIME NULL,
  `endDate` DATETIME NULL,
  `plannedStartDate` DATETIME NULL,
  `plannedEndDate` DATETIME NULL,
  `length` TIMESTAMP NULL,
  `reason` VARCHAR(45) NULL,
  `account` VARCHAR(45) NULL,
  `serviceProvider` VARCHAR(45) NULL,
  `encounterPartOf` VARCHAR(45) NULL,
  `Organization_organizationID` INT NOT NULL,
  PRIMARY KEY (`encounterID`),
  INDEX `fk_Encounter_Organization1_idx` (`Organization_organizationID` ASC) VISIBLE,
  CONSTRAINT `fk_Encounter_Organization1`
    FOREIGN KEY (`Organization_organizationID`)
    REFERENCES `mydb`.`Organization` (`organizationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`timestamps`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`timestamps` (
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `update_time` TIMESTAMP NULL);


-- -----------------------------------------------------
-- Table `mydb`.`PatientContacts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PatientContacts` (
  `contactID` INT NOT NULL,
  `parties` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `contact` VARCHAR(45) NULL,
  `gender` VARCHAR(45) NULL,
  `organization` VARCHAR(45) NULL,
  `availableStartDate` DATETIME NULL,
  `availableEndDate` DATETIME NULL,
  `Patient_patientID` INT NOT NULL,
  PRIMARY KEY (`contactID`),
  INDEX `fk_PatientContacts_Patient1_idx` (`Patient_patientID` ASC) VISIBLE,
  CONSTRAINT `fk_PatientContacts_Patient1`
    FOREIGN KEY (`Patient_patientID`)
    REFERENCES `mydb`.`Patient` (`patientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PatientAddress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PatientAddress` (
  `addressCode` INT NOT NULL AUTO_INCREMENT,
  `use` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  `streetLine` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `district` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `postalCode` INT NULL,
  `country` VARCHAR(45) NULL,
  `Patient_patientID` INT NOT NULL,
  PRIMARY KEY (`addressCode`),
  INDEX `fk_PatientAddress_Patient1_idx` (`Patient_patientID` ASC) VISIBLE,
  CONSTRAINT `fk_PatientAddress_Patient1`
    FOREIGN KEY (`Patient_patientID`)
    REFERENCES `mydb`.`Patient` (`patientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Availability`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Availability` (
  `daysOfWeek` VARCHAR(50) NULL,
  `allDay` TINYINT NULL,
  `startTime` TIME NULL,
  `endTime` TIME NULL,
  `PractitionerRole_PracRoleID` INT NOT NULL,
  INDEX `fk_Availability_PractitionerRole1_idx` (`PractitionerRole_PracRoleID` ASC) VISIBLE,
  CONSTRAINT `fk_Availability_PractitionerRole1`
    FOREIGN KEY (`PractitionerRole_PracRoleID`)
    REFERENCES `mydb`.`PractitionerRole` (`pracRoleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Not Available Time`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Not Available Time` (
  `description` VARCHAR(45) NULL,
  `startTime` DATETIME NULL,
  `endTime` DATETIME NULL,
  `PractitionerRole_PracRoleID` INT NOT NULL,
  INDEX `fk_Not Available Time_PractitionerRole1_idx` (`PractitionerRole_PracRoleID` ASC) VISIBLE,
  CONSTRAINT `fk_Not Available Time_PractitionerRole1`
    FOREIGN KEY (`PractitionerRole_PracRoleID`)
    REFERENCES `mydb`.`PractitionerRole` (`pracRoleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Hospitalization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Hospitalization` (
  `hospitalizationID` INT NOT NULL,
  `preAdminssionID` INT NOT NULL,
  `origin` VARCHAR(45) NULL,
  `admitSource` VARCHAR(45) NULL,
  `readmission` VARCHAR(45) NULL,
  `dietPreference` VARCHAR(45) NULL,
  `specialCourtesy` VARCHAR(45) NULL,
  `specialArrangement` VARCHAR(45) NULL,
  `destination` VARCHAR(45) NULL,
  `dischargeDisposition` VARCHAR(45) NULL,
  `Encounter_encounterID` INT NOT NULL,
  PRIMARY KEY (`hospitalizationID`),
  INDEX `fk_Hospitalization_Encounter1_idx` (`Encounter_encounterID` ASC) VISIBLE,
  CONSTRAINT `fk_Hospitalization_Encounter1`
    FOREIGN KEY (`Encounter_encounterID`)
    REFERENCES `mydb`.`Encounter` (`encounterID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Condition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Condition` (
  `idCondition` INT NOT NULL,
  `Conditioncol` VARCHAR(45) NULL,
  PRIMARY KEY (`idCondition`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Class`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Class` (
  `classID` INT NOT NULL,
  `history` VARCHAR(45) NULL,
  `historyClass` VARCHAR(45) NULL,
  `historyStartDate` DATETIME NULL,
  `historyEndDate` DATETIME NULL,
  `Encounter_encounterID` INT NOT NULL,
  PRIMARY KEY (`classID`),
  INDEX `fk_Class_Encounter1_idx` (`Encounter_encounterID` ASC) VISIBLE,
  CONSTRAINT `fk_Class_Encounter1`
    FOREIGN KEY (`Encounter_encounterID`)
    REFERENCES `mydb`.`Encounter` (`encounterID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Diagnosis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Diagnosis` (
  `listOfDiagnosis` VARCHAR(45) NULL,
  `condition` VARCHAR(45) NULL,
  `roleInEncounter` VARCHAR(45) NULL,
  `rank` VARCHAR(45) NULL,
  `Encounter_encounterID` INT NOT NULL,
  INDEX `fk_Diagnosis_Encounter1_idx` (`Encounter_encounterID` ASC) VISIBLE,
  CONSTRAINT `fk_Diagnosis_Encounter1`
    FOREIGN KEY (`Encounter_encounterID`)
    REFERENCES `mydb`.`Encounter` (`encounterID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Participants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Participants` (
  `listofResponsibles` VARCHAR(45) NULL,
  `role` VARCHAR(45) NULL,
  `startTime` DATETIME NULL,
  `endTime` DATETIME NULL,
  `involvedPeople` VARCHAR(45) NULL,
  `Encounter_encounterID` INT NOT NULL,
  INDEX `fk_Participants_Encounter1_idx` (`Encounter_encounterID` ASC) VISIBLE,
  CONSTRAINT `fk_Participants_Encounter1`
    FOREIGN KEY (`Encounter_encounterID`)
    REFERENCES `mydb`.`Encounter` (`encounterID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Practitioner_has_PractitionerRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Practitioner_has_PractitionerRole` (
  `Practitioner_practitionerID` INT NOT NULL,
  `Practitioner_Qualifications_qualificationID` INT NOT NULL,
  `PractitionerRole_PracRoleID` INT NOT NULL,
  PRIMARY KEY (`Practitioner_practitionerID`, `Practitioner_Qualifications_qualificationID`, `PractitionerRole_PracRoleID`),
  INDEX `fk_Practitioner_has_PractitionerRole_PractitionerRole1_idx` (`PractitionerRole_PracRoleID` ASC) VISIBLE,
  INDEX `fk_Practitioner_has_PractitionerRole_Practitioner1_idx` (`Practitioner_practitionerID` ASC, `Practitioner_Qualifications_qualificationID` ASC) VISIBLE,
  CONSTRAINT `fk_Practitioner_has_PractitionerRole_Practitioner1`
    FOREIGN KEY (`Practitioner_practitionerID` , `Practitioner_Qualifications_qualificationID`)
    REFERENCES `mydb`.`Practitioner` (`practitionerID` , `Qualifications_qualificationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Practitioner_has_PractitionerRole_PractitionerRole1`
    FOREIGN KEY (`PractitionerRole_PracRoleID`)
    REFERENCES `mydb`.`PractitionerRole` (`pracRoleID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Status History`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Status History` (
  `status` VARCHAR(45) NULL,
  `startDate` DATETIME NULL,
  `endDate` DATETIME NULL,
  `Encounter_encounterID` INT NOT NULL,
  INDEX `fk_Status History_Encounter1_idx` (`Encounter_encounterID` ASC) VISIBLE,
  CONSTRAINT `fk_Status History_Encounter1`
    FOREIGN KEY (`Encounter_encounterID`)
    REFERENCES `mydb`.`Encounter` (`encounterID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Organization Address and Contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Organization Address and Contact` (
  `use` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL,
  `text` VARCHAR(45) NULL,
  `line` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `district` VARCHAR(45) NULL,
  `state` VARCHAR(45) NULL,
  `postalCode` INT NULL,
  `country` VARCHAR(45) NULL,
  `addressUsedStartDate` DATETIME NULL,
  `addressUsedEndDate` DATETIME NULL,
  `Organization Addresscol` VARCHAR(45) NULL,
  `Organization_organizationID` INT NOT NULL,
  `contactPurpose` VARCHAR(45) NULL,
  `contactfirstName` VARCHAR(45) NULL,
  `contactLastName` VARCHAR(45) NULL,
  `telecom` VARCHAR(45) NULL,
  INDEX `fk_Organization Address_Organization1_idx` (`Organization_organizationID` ASC) VISIBLE,
  CONSTRAINT `fk_Organization Address_Organization1`
    FOREIGN KEY (`Organization_organizationID`)
    REFERENCES `mydb`.`Organization` (`organizationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Patient_has_Practitioner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Patient_has_Practitioner` (
  `Patient_patientID` INT NOT NULL,
  `Practitioner_practitionerID` INT NOT NULL,
  `Practitioner_Qualifications_qualificationID` INT NOT NULL,
  PRIMARY KEY (`Patient_patientID`, `Practitioner_practitionerID`, `Practitioner_Qualifications_qualificationID`),
  INDEX `fk_Patient_has_Practitioner_Practitioner1_idx` (`Practitioner_practitionerID` ASC, `Practitioner_Qualifications_qualificationID` ASC) VISIBLE,
  INDEX `fk_Patient_has_Practitioner_Patient1_idx` (`Patient_patientID` ASC) VISIBLE,
  CONSTRAINT `fk_Patient_has_Practitioner_Patient1`
    FOREIGN KEY (`Patient_patientID`)
    REFERENCES `mydb`.`Patient` (`patientID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Patient_has_Practitioner_Practitioner1`
    FOREIGN KEY (`Practitioner_practitionerID` , `Practitioner_Qualifications_qualificationID`)
    REFERENCES `mydb`.`Practitioner` (`practitionerID` , `Qualifications_qualificationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
